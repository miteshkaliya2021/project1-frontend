{"ast":null,"code":"var _jsxFileName = \"/home/mitesh/Desktop/workspace/project1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport Home from './Home';\nimport PrivateRoute from './Utils/PrivateRoute';\nimport PublicRoute from './Utils/PublicRoute';\nimport { getToken, removeUserSession, setUserSession } from './Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [authLoading, setAuthLoading] = useState(true);\n  useEffect(() => {\n    const token = getToken();\n\n    if (!token) {\n      return;\n    }\n\n    axios.get(`http://localhost:4000/verifyToken?token=${token}`).then(response => {\n      setUserSession(response.data.token, response.data.user);\n      setAuthLoading(false);\n    }).catch(error => {\n      removeUserSession();\n      setAuthLoading(false);\n    });\n  }, []);\n\n  if (authLoading && getToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: \"Checking Authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            exact: true,\n            activeClassName: \"active\",\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            activeClassName: \"active\",\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"(Access without token only)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 74\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            activeClassName: \"active\",\n            to: \"/dashboard\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"(Access with token only)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 82\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              component: Home\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n              path: \"/login\",\n              component: Login\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/dashboard\",\n              component: Dashboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9coNn8RZrESC5zIAnzWHJSN1YG8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mitesh/Desktop/workspace/project1/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","NavLink","axios","Login","Dashboard","Home","PrivateRoute","PublicRoute","getToken","removeUserSession","setUserSession","App","authLoading","setAuthLoading","token","get","then","response","data","user","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport Home from './Home';\n\nimport PrivateRoute from './Utils/PrivateRoute';\nimport PublicRoute from './Utils/PublicRoute';\nimport { getToken, removeUserSession, setUserSession } from './Utils/Common';\n\nfunction App() {\n  const [authLoading, setAuthLoading] = useState(true);\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      return;\n    }\n\n    axios.get(`http://localhost:4000/verifyToken?token=${token}`).then(response => {\n      setUserSession(response.data.token, response.data.user);\n      setAuthLoading(false);\n    }).catch(error => {\n      removeUserSession();\n      setAuthLoading(false);\n    });\n  }, []);\n\n  if (authLoading && getToken()) {\n    return <div className=\"content\">Checking Authentication...</div>\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div>\n          <div className=\"header\">\n            <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\n            <NavLink activeClassName=\"active\" to=\"/login\">Login</NavLink><small>(Access without token only)</small>\n            <NavLink activeClassName=\"active\" to=\"/dashboard\">Dashboard</NavLink><small>(Access with token only)</small>\n          </div>\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <PublicRoute path=\"/login\" component={Login} />\n              <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}